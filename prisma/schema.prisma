generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model cabang {
  kode_cabang   String    @id @default(uuid())
  nama_cabang   String
  alamat_cabang String
  notelp_cabang String
  keterangan    String?
  request      request[] 
}


model barang {
  id_barang    String      @id @default(uuid())
  nama_barang  String
  jenis_barang String
  id_satuan    String
  harga        Float
  stok_awal    Int
  terpakai     Int
  sisa         Int         

  satuan_barang satuan_barang? @relation(fields: [id_satuan], references: [id_satuan], onDelete: Cascade, onUpdate: Cascade)
  request     request[]      
}

model satuan_barang {
  id_satuan   String   @id @default(uuid())
  nama_satuan String
  barang      barang[]
  request     request[]
}

model user {
  id_user   String    @id @default(uuid())
  username  String    @unique
  password  String
  jabatan   String
  request  request[] 
  approval approval[]
}

model request {
  kode_request    String    @id
  kode_cabang     String
  id_user         String  
  id_barang       String    
  id_satuan       String
  tanggal_request DateTime
  department      String
  jumlah_barang   Int
  keperluan       String
  status          String

  approval        approval[]
  barang          barang?    @relation(fields: [id_barang], references: [id_barang], onDelete: Cascade, onUpdate: Cascade)
  cabang          cabang?    @relation(fields: [kode_cabang], references: [kode_cabang], onDelete: Cascade, onUpdate: Cascade)
  user            user?      @relation(fields: [id_user], references: [id_user], onDelete: Cascade, onUpdate: Cascade)
  satuan_barang   satuan_barang?   @relation(fields: [id_satuan], references: [id_satuan], onDelete: Cascade, onUpdate: Cascade)
}

model approval {
  id_approval     Int    @id @default(autoincrement())
  userID         String
  requestID    String 
  status          String
  createdAt  DateTime  @default(now())

  request         request?   @relation(fields: [requestID], references: [kode_request], onDelete: Cascade, onUpdate: Cascade)
  user            user       @relation(fields: [userID], references: [id_user], onDelete: Cascade, onUpdate: Cascade)
}

model Transaksi {
  kode_request  String @id
  tanggal_request DateTime
  nama_cabang   String
  total_request Int

  @@map("Transaksi") 
}
	
model DetailRequest {
  kode_request String @id
  id_user      String  
  id_barang    String
  status       String
  qty_request  Int
  subtotal     Float
  @@map("DetailRequest") 
}
